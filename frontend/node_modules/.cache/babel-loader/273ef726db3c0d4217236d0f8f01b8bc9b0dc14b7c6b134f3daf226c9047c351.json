{"ast":null,"code":"import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport httpRequest from \"./utils/httpRequest\";\nconst refreshToken = async () => {\n  try {\n    const res = await httpRequest.post('/user/auth/refresh', {\n      withCredentials: true\n    });\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const createAxios = (user, dispatch, stateSuccess) => {\n  const newInstance = axios.create({\n    baseURL: process.env.REACT_APP_URL\n  });\n  newInstance.interceptors.request.use(async config => {\n    let date = new Date();\n    const decodedToken = jwt_decode(user.accessToken);\n    console.log(user, date.getTime() / 1000);\n    if (decodedToken.exp < date.getTime() / 1000) {\n      const data = await refreshToken();\n      const refreshUser = {\n        ...user,\n        accessToken: data.accessToken\n      };\n      dispatch(stateSuccess(refreshUser));\n      config.headers['token'] = `Bearer ${data.accessToken}`;\n    }\n    return config;\n  }, err => {\n    return Promise.reject(err);\n  });\n  return newInstance;\n};","map":{"version":3,"names":["axios","jwt_decode","httpRequest","refreshToken","res","post","withCredentials","data","err","console","log","createAxios","user","dispatch","stateSuccess","newInstance","create","baseURL","process","env","REACT_APP_URL","interceptors","request","use","config","date","Date","decodedToken","accessToken","getTime","exp","refreshUser","headers","Promise","reject"],"sources":["/Users/luuduylinh/Desktop/PhoneStore/src/createInstance.js"],"sourcesContent":["import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport httpRequest from '~/utils/httpRequest';\n\nconst refreshToken = async () => {\n    try {\n        const res = await httpRequest.post('/user/auth/refresh', {\n            withCredentials: true,\n        });\n        return res.data;\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const createAxios = (user, dispatch, stateSuccess) => {\n    const newInstance = axios.create({ baseURL: process.env.REACT_APP_URL });\n    newInstance.interceptors.request.use(\n        async (config) => {\n            let date = new Date();\n            const decodedToken = jwt_decode(user.accessToken);\n            console.log(user, date.getTime() / 1000);\n            if (decodedToken.exp < date.getTime() / 1000) {\n                const data = await refreshToken();\n                const refreshUser = {\n                    ...user,\n                    accessToken: data.accessToken,\n                };\n                dispatch(stateSuccess(refreshUser));\n                config.headers['token'] = `Bearer ${data.accessToken}`;\n            }\n            return config;\n        },\n        (err) => {\n            return Promise.reject(err);\n        },\n    );\n    return newInstance;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,WAAW;AAElB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMF,WAAW,CAACG,IAAI,CAAC,oBAAoB,EAAE;MACrDC,eAAe,EAAE;IACrB,CAAC,CAAC;IACF,OAAOF,GAAG,CAACG,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,KAAK;EACzD,MAAMC,WAAW,GAAGf,KAAK,CAACgB,MAAM,CAAC;IAAEC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;EAAc,CAAC,CAAC;EACxEL,WAAW,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAChC,MAAOC,MAAM,IAAK;IACd,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACrB,MAAMC,YAAY,GAAG1B,UAAU,CAACW,IAAI,CAACgB,WAAW,CAAC;IACjDnB,OAAO,CAACC,GAAG,CAACE,IAAI,EAAEa,IAAI,CAACI,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;IACxC,IAAIF,YAAY,CAACG,GAAG,GAAGL,IAAI,CAACI,OAAO,CAAC,CAAC,GAAG,IAAI,EAAE;MAC1C,MAAMtB,IAAI,GAAG,MAAMJ,YAAY,CAAC,CAAC;MACjC,MAAM4B,WAAW,GAAG;QAChB,GAAGnB,IAAI;QACPgB,WAAW,EAAErB,IAAI,CAACqB;MACtB,CAAC;MACDf,QAAQ,CAACC,YAAY,CAACiB,WAAW,CAAC,CAAC;MACnCP,MAAM,CAACQ,OAAO,CAAC,OAAO,CAAC,GAAI,UAASzB,IAAI,CAACqB,WAAY,EAAC;IAC1D;IACA,OAAOJ,MAAM;EACjB,CAAC,EACAhB,GAAG,IAAK;IACL,OAAOyB,OAAO,CAACC,MAAM,CAAC1B,GAAG,CAAC;EAC9B,CACJ,CAAC;EACD,OAAOO,WAAW;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}