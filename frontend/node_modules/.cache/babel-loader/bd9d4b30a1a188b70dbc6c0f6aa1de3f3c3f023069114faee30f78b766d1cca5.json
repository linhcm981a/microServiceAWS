{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    login: {\n      currentUser: null,\n      isFetching: false,\n      error: false\n    },\n    register: {\n      isFetching: false,\n      error: false,\n      success: false\n    }\n  },\n  reducers: {\n    loginStart: state => {\n      state.login.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.currentUser = action.payload;\n      state.login.error = false;\n    },\n    loginFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    registerStart: state => {\n      state.register.isFetching = true;\n    },\n    registerSuccess: (state, action) => {\n      state.register.isFetching = false;\n      state.register.error = false;\n      state.register.success = true;\n    },\n    registerFailed: state => {\n      state.register.isFetching = false;\n      state.register.error = true;\n      state.register.success = false;\n    },\n    logoutStart: state => {\n      state.login.isFetching = true;\n    },\n    logoutSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.error = false;\n      state.login.currentUser = null;\n    },\n    logoutFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    updateStart: state => {\n      state.login.isFetching = true;\n    },\n    updateSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.currentUser = action.payload;\n      state.login.error = false;\n    },\n    updateFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginFailed,\n  loginSuccess,\n  registerStart,\n  registerSuccess,\n  registerFailed,\n  logoutStart,\n  logoutSuccess,\n  logoutFailed,\n  updateStart,\n  updateSuccess,\n  updateFailed\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","authSlice","name","initialState","login","currentUser","isFetching","error","register","success","reducers","loginStart","state","loginSuccess","action","payload","loginFailed","registerStart","registerSuccess","registerFailed","logoutStart","logoutSuccess","logoutFailed","updateStart","updateSuccess","updateFailed","actions","reducer"],"sources":["/Users/luuduylinh/Desktop/untitled folder 4/PhoneStore/src/redux/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        login: {\n            currentUser: null,\n            isFetching: false,\n            error: false,\n        },\n        register: {\n            isFetching: false,\n            error: false,\n            success: false,\n        },\n    },\n    reducers: {\n        loginStart: (state) => {\n            state.login.isFetching = true;\n        },\n        loginSuccess: (state, action) => {\n            state.login.isFetching = false;\n            state.login.currentUser = action.payload;\n            state.login.error = false;\n        },\n        loginFailed: (state) => {\n            state.login.isFetching = false;\n            state.login.error = true;\n        },\n        registerStart: (state) => {\n            state.register.isFetching = true;\n        },\n        registerSuccess: (state, action) => {\n            state.register.isFetching = false;\n            state.register.error = false;\n            state.register.success = true;\n        },\n        registerFailed: (state) => {\n            state.register.isFetching = false;\n            state.register.error = true;\n            state.register.success = false;\n        },\n        logoutStart: (state) => {\n            state.login.isFetching = true;\n        },\n        logoutSuccess: (state, action) => {\n            state.login.isFetching = false;\n            state.login.error = false;\n            state.login.currentUser = null;\n        },\n        logoutFailed: (state) => {\n            state.login.isFetching = false;\n            state.login.error = true;\n        },\n        updateStart: (state) => {\n            state.login.isFetching = true;\n        },\n        updateSuccess: (state, action) => {\n            state.login.isFetching = false;\n            state.login.currentUser = action.payload;\n            state.login.error = false;\n        },\n        updateFailed: (state) => {\n            state.login.isFetching = false;\n            state.login.error = true;\n        },\n    },\n});\n\nexport const {\n    loginStart,\n    loginFailed,\n    loginSuccess,\n    registerStart,\n    registerSuccess,\n    registerFailed,\n    logoutStart,\n    logoutSuccess,\n    logoutFailed,\n    updateStart,\n    updateSuccess,\n    updateFailed,\n} = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}